#!/usr/bin/env false

__cache_home="${XDG_CACHE_HOME:-$HOME/.cache}"
__config_home="${XDG_CONFIG_HOME:-$HOME/.config}"

if test -z "$__rc"; then
	__rc=unknown
fi

if test -z "$__rc_common_init"; then
	__rc_common_init=1

	if test -d "$__config_home/sh-lib"; then
	   for __cmd in "$__config_home/sh-lib"/*; do
			# shellcheck source=/dev/null
		   . "$__cmd"
	   done
	fi

	if test -d "$__config_home/sh"; then
		for __cmd in "$__config_home/sh"/*; do
			# shellcheck source=/dev/null
			. "$__cmd"
		done
	fi

	if test -d "$__config_home/sh-common"; then
		for __cmd in "$__config_home/sh-common"/*; do
			# shellcheck source=/dev/null
			. "$__cmd"
		done
	fi
fi

if test -d "$__config_home/sh-interactive"; then
	for __cmd in "$__config_home/sh-interactive"/*; do
		# shellcheck source=/dev/null
		. "$__cmd"
	done
fi

## interactive specific configuration follows

CLICOLOR=1; export CLICOLOR
EDITOR='emacs -nw'; export EDITOR
LSCOLORS=ExFxCxDxBxegedabagacad; export LSCOLORS
VISUAL='emacs -nw'; export VISUAL

__attr_dim="$(tput dim)"

__attr_red="$(tput setaf 1)"
__attr_white="$(tput setaf 7)"

__attr_unset="$(tput sgr0)"
__attr_reset="$__attr_unset$(tput cnorm)"

# regexp-escape $HOME
__ps1_home_pattern="$(printf '%s' "$HOME" | sed 's/[]\/$.^|[]/\\&/g')"

__ps1_err() {
	# shellcheck disable=SC2181
	if test "$?" -ne 0; then
		printf '%s' "$__attr_red"
	else
		printf '%s' "$__attr_dim$__attr_white"
	fi
}

__ps1_pwd() {
	printf '%s' "$PWD" | sed "s/^$__ps1_home_pattern/~/"
}

__ps1_prompt_chr() {
	if test "$(id -u)" -eq 0; then
		printf '#'
	else
		printf ';'
	fi
}

case "$INSIDE_EMACS" in
	'')
		PS1="\$(eval \"\$PROMPT_COMMAND\")$__attr_unset\$(__ps1_err)\$(__ps1_prompt_chr) $__attr_reset" ;;
	*vterm*)
		PS1="\$(eval \"\$PROMPT_COMMAND\")$__attr_unset\$(__ps1_pwd) \$(__ps1_err)\$(__ps1_prompt_chr) \$(__vterm_printf '51;A')$__attr_reset" ;;
	*)
		PS1="\$(eval \"\$PROMPT_COMMAND\")$__attr_unset\$(__ps1_pwd) \$(__ps1_err)\$(__ps1_prompt_chr) $__attr_reset"
esac
